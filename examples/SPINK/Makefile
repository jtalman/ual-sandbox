CC       = nvcc -arch=sm_20  # Compiler
CCFLAGS  = --compiler-options '-fpic -ansi -Wall -g '      # Compilation flags
#CUDA_INC  = -I/usr/local/cuda/include  -I/home/research/ranjbar/NVIDIA_CUDA_SDK/common/inc


DLD      = nvcc                      # Dynamic linker
DLDFLAGS = -shared                   # Dynamic linker flags
LD       = nvcc                       # Linker
LDFLAGS  =                           # Linker flags

INC += -I. -I./src 
INC += -I$(UAL)/ext/UI/include
INC += -I$(UAL_SXF)/src
INC += -I$(UAL_SPINK)/src
INC += -I$(UAL_ACCSIM)/src
INC += -I$(UAL_TEAPOT)/src
INC += -I$(UAL_PAC)/src
INC += -I$(UAL)/codes/UAL/include
INC += -I$(UAL_ZLIB)/src
INC += -I$(UAL)/tools/include
INC += -I$(SXF)/src
INC += -I/home/ual/tools/gsl/include
LIBS += -L$(UAL)/ext/UI/lib/$(UAL_ARCH)  	-lUalUI
LIBS += -L$(UAL_SPINK)/lib/$(UAL_ARCH)  	-lSpink
LIBS += -L$(UAL_TIBETAN)/lib/$(UAL_ARCH)  	-lTibetan
LIBS += -L$(UAL_SXF)/lib/$(UAL_ARCH) 		-lUalSXF2
LIBS += -L$(UAL_ACCSIM)/lib/$(UAL_ARCH) 	-lAccsim
LIBS += -L$(UAL_TEAPOT)/lib/$(UAL_ARCH) 	-lTeapot
LIBS += -L$(UAL_PAC)/lib/$(UAL_ARCH)  		-lPacSMF -lPacOptics -lPac
LIBS += -L$(UAL_ZLIB)/lib/$(UAL_ARCH) 		-lZTps
LIBS += -L$(UAL)/codes/UAL/lib/$(UAL_ARCH) 	-lUal
LIBS += -L$(SXF)/lib/$(UAL_ARCH) 		-lSXF
LIBS += -L$(UAL)/tools/lib/$(UAL_ARCH) 		-lpcre -lxml2 -lrfftw -lfftw
LIBS += 					-lm
LIBS += 	-L/usr/local/cuda/lib64 -lcudart
LIBS +=	-L$(UAL)/tools/lib/linux -lgsl

SRC_DIR  = .
OBJ_DIR  = ./lib/$(UAL_ARCH)/obj

OBJS = $(OBJ_DIR)/timer.o \
	   $(OBJ_DIR)/PositionPrinter.o \
	   $(OBJ_DIR)/SpinPrinter.o 


compile : $(OBJS) ./gputracker2 ./tracker2

clean :
	rm -f $(OBJS) $(OBJ_DIR)/gputracker2.o ./gputracker2
	rm -f $(OBJS) $(OBJ_DIR)/tracker2.o  ./tracker2 

./gputracker2  : $(OBJ_DIR)/gputracker2.o $(OBJS)
	$(LD) -o $@  $(LDFLAGS) $(INC) $(OBJ_DIR)/gputracker2.o $(OBJS) $(LIBS)

./tracker2     : $(OBJ_DIR)/tracker2.o $(OBJS)
	$(LD) -o $@  $(LDFLAGS) $(INC) $(OBJ_DIR)/tracker2.o $(OBJS) $(LIBS)

$(OBJ_DIR)/%.o : $(SRC_DIR)/%.cu
	$(CC)  $(CCFLAGS) $(INC) -c $< -o $@

$(OBJ_DIR)/%.o : $(SRC_DIR)/%.cpp
	$(CC)  $(CCFLAGS) $(INC) -c $< -o $@

$(OBJ_DIR)/%.o : $(SRC_DIR)/%.cc
	$(CC)  $(CCFLAGS) $(INC) -c $< -o $@

