//
// File generated by /home/ual/tools/root/bin/rootcint at Thu May 27 15:57:42 2004.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

#include "UALDict.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "RtypesImp.h"

#include "TVectorProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void UALcLcLArgument_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void UALcLcLArgument_Dictionary();
   static TClass *UALcLcLArgument_IsA(const void*);
   static void *new_UALcLcLArgument(void *p = 0);
   static void *newArray_UALcLcLArgument(Long_t size);
   static void delete_UALcLcLArgument(void *p);
   static void deleteArray_UALcLcLArgument(void *p);
   static void destruct_UALcLcLArgument(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const UAL::Argument*)
   {
      UAL::Argument *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("UAL::Argument", "/home/ual/ual1/ext/UI/include/UAL/UI/Argument.hh", 11,
                  typeid(UAL::Argument), DefineBehavior(ptr, ptr),
                  0, &UALcLcLArgument_Dictionary, &UALcLcLArgument_IsA, 3,
                  sizeof(UAL::Argument) );
      instance.SetNew(&new_UALcLcLArgument);
      instance.SetNewArray(&newArray_UALcLcLArgument);
      instance.SetDelete(&delete_UALcLcLArgument);
      instance.SetDeleteArray(&deleteArray_UALcLcLArgument);
      instance.SetDestructor(&destruct_UALcLcLArgument);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const UAL::Argument*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void UALcLcLArgument_Dictionary() {
      ROOT::GenerateInitInstance((const UAL::Argument*)0x0)->GetClass();
   }

}

namespace ROOT {
   void UALcLcLArguments_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void UALcLcLArguments_Dictionary();
   static TClass *UALcLcLArguments_IsA(const void*);
   static void *new_UALcLcLArguments(void *p = 0);
   static void *newArray_UALcLcLArguments(Long_t size);
   static void delete_UALcLcLArguments(void *p);
   static void deleteArray_UALcLcLArguments(void *p);
   static void destruct_UALcLcLArguments(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const UAL::Arguments*)
   {
      UAL::Arguments *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("UAL::Arguments", "/home/ual/ual1/ext/UI/include/UAL/UI/Arguments.hh", 12,
                  typeid(UAL::Arguments), DefineBehavior(ptr, ptr),
                  0, &UALcLcLArguments_Dictionary, &UALcLcLArguments_IsA, 3,
                  sizeof(UAL::Arguments) );
      instance.SetNew(&new_UALcLcLArguments);
      instance.SetNewArray(&newArray_UALcLcLArguments);
      instance.SetDelete(&delete_UALcLcLArguments);
      instance.SetDeleteArray(&deleteArray_UALcLcLArguments);
      instance.SetDestructor(&destruct_UALcLcLArguments);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const UAL::Arguments*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void UALcLcLArguments_Dictionary() {
      ROOT::GenerateInitInstance((const UAL::Arguments*)0x0)->GetClass();
   }

}

namespace ROOT {
   void UALcLcLShell_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void UALcLcLShell_Dictionary();
   static TClass *UALcLcLShell_IsA(const void*);
   static void *new_UALcLcLShell(void *p = 0);
   static void *newArray_UALcLcLShell(Long_t size);
   static void delete_UALcLcLShell(void *p);
   static void deleteArray_UALcLcLShell(void *p);
   static void destruct_UALcLcLShell(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const UAL::Shell*)
   {
      UAL::Shell *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("UAL::Shell", "/home/ual/ual1/ext/UI/include/UAL/UI/Shell.hh", 14,
                  typeid(UAL::Shell), DefineBehavior(ptr, ptr),
                  0, &UALcLcLShell_Dictionary, &UALcLcLShell_IsA, 3,
                  sizeof(UAL::Shell) );
      instance.SetNew(&new_UALcLcLShell);
      instance.SetNewArray(&newArray_UALcLcLShell);
      instance.SetDelete(&delete_UALcLcLShell);
      instance.SetDeleteArray(&deleteArray_UALcLcLShell);
      instance.SetDestructor(&destruct_UALcLcLShell);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const UAL::Shell*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void UALcLcLShell_Dictionary() {
      ROOT::GenerateInitInstance((const UAL::Shell*)0x0)->GetClass();
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *UALcLcLArgument_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::UAL::Argument*)obj));
   }
   // Wrappers around operator new
   static void *new_UALcLcLArgument(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::UAL::Argument : new ::UAL::Argument;
   }
   static void *newArray_UALcLcLArgument(Long_t size) {
      return new ::UAL::Argument[size];
   }
   // Wrapper around operator delete
   static void delete_UALcLcLArgument(void *p) {
      delete ((::UAL::Argument*)p);
   }
   static void deleteArray_UALcLcLArgument(void *p) {
      delete [] ((::UAL::Argument*)p);
   }
   static void destruct_UALcLcLArgument(void *p) {
      typedef ::UAL::Argument current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::UAL::Argument

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *UALcLcLArguments_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::UAL::Arguments*)obj));
   }
   // Wrappers around operator new
   static void *new_UALcLcLArguments(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::UAL::Arguments : new ::UAL::Arguments;
   }
   static void *newArray_UALcLcLArguments(Long_t size) {
      return new ::UAL::Arguments[size];
   }
   // Wrapper around operator delete
   static void delete_UALcLcLArguments(void *p) {
      delete ((::UAL::Arguments*)p);
   }
   static void deleteArray_UALcLcLArguments(void *p) {
      delete [] ((::UAL::Arguments*)p);
   }
   static void destruct_UALcLcLArguments(void *p) {
      typedef ::UAL::Arguments current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::UAL::Arguments

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *UALcLcLShell_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::UAL::Shell*)obj));
   }
   // Wrappers around operator new
   static void *new_UALcLcLShell(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::UAL::Shell : new ::UAL::Shell;
   }
   static void *newArray_UALcLcLShell(Long_t size) {
      return new ::UAL::Shell[size];
   }
   // Wrapper around operator delete
   static void delete_UALcLcLShell(void *p) {
      delete ((::UAL::Shell*)p);
   }
   static void deleteArray_UALcLcLShell(void *p) {
      delete [] ((::UAL::Shell*)p);
   }
   static void destruct_UALcLcLShell(void *p) {
      typedef ::UAL::Shell current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::UAL::Shell

/********************************************************
* UALDict.cc
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableUALDict();

extern "C" void G__set_cpp_environmentUALDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/ual/ual1/ext/UI/include/UAL/UI/Argument.hh");
  G__add_compiledheader("/home/ual/ual1/ext/UI/include/UAL/UI/Arguments.hh");
  G__add_compiledheader("/home/ual/ual1/ext/UI/include/UAL/UI/Shell.hh");
  G__cpp_reset_tagtableUALDict();
}
class G__UALDictdOcc_tag {};

void* operator new(size_t size,G__UALDictdOcc_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__UALDictdOcc_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_UALDictdOcc() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevUALDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* UAL */

/* UAL::Argument */
static int G__UALDict_126_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Argument *p=NULL;
   if(G__getaryconstruct()) p=new UAL::Argument[G__getaryconstruct()];
   else p=::new((G__UALDictdOcc_tag*)G__getgvp()) UAL::Argument;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_126_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Argument *p=NULL;
      p=::new((G__UALDictdOcc_tag*)G__getgvp()) UAL::Argument(*(UAL::Argument*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_126_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Argument *p=NULL;
      p=::new((G__UALDictdOcc_tag*)G__getgvp()) UAL::Argument(*(string*)libp->para[0].ref,(int)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_126_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Argument *p=NULL;
      p=::new((G__UALDictdOcc_tag*)G__getgvp()) UAL::Argument(*(string*)libp->para[0].ref,(double)G__double(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_126_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Argument *p=NULL;
      p=::new((G__UALDictdOcc_tag*)G__getgvp()) UAL::Argument(*(string*)libp->para[0].ref,*(string*)libp->para[1].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_126_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Argument *p=NULL;
      p=::new((G__UALDictdOcc_tag*)G__getgvp()) UAL::Argument(*(string*)libp->para[0].ref,*(UAL::Object*)libp->para[1].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_126_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const UAL::Argument*)(G__getstructoffset()))->getType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_126_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const string& obj=((const UAL::Argument*)(G__getstructoffset()))->getKey();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_126_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const UAL::Argument*)(G__getstructoffset()))->getNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_126_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const string& obj=((const UAL::Argument*)(G__getstructoffset()))->getString();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_126_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const UAL::Object& obj=((const UAL::Argument*)(G__getstructoffset()))->getObject();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef UAL::Argument G__TUALcLcLArgument;
static int G__UALDict_126_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (UAL::Argument *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((UAL::Argument *)((G__getstructoffset())+sizeof(UAL::Argument)*i))->~G__TUALcLcLArgument();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((UAL::Argument *)(G__getstructoffset()))->~G__TUALcLcLArgument();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* UAL::Arguments */
static int G__UALDict_135_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Arguments *p=NULL;
   if(G__getaryconstruct()) p=new UAL::Arguments[G__getaryconstruct()];
   else p=::new((G__UALDictdOcc_tag*)G__getgvp()) UAL::Arguments;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_135_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Arguments *p=NULL;
      p=::new((G__UALDictdOcc_tag*)G__getgvp()) UAL::Arguments(*(UAL::Argument*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_135_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const UAL::Arguments& obj=((UAL::Arguments*)(G__getstructoffset()))->operator<<(*(UAL::Argument*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_135_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         map<string,UAL::Argument*,less<string>,allocator<pair<const string,UAL::Argument*> > > *pobj,xobj=((const UAL::Arguments*)(G__getstructoffset()))->getMap();
        pobj=new map<string,UAL::Argument*,less<string>,allocator<pair<const string,UAL::Argument*> > >(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UALDict_135_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   UAL::Arguments *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new UAL::Arguments(*(UAL::Arguments*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef UAL::Arguments G__TUALcLcLArguments;
static int G__UALDict_135_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (UAL::Arguments *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((UAL::Arguments *)((G__getstructoffset())+sizeof(UAL::Arguments)*i))->~G__TUALcLcLArguments();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((UAL::Arguments *)(G__getstructoffset()))->~G__TUALcLcLArguments();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UALDict_135_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Arguments *dest = (UAL::Arguments*)(G__getstructoffset());
   *dest = (*(UAL::Arguments*)libp->para[0].ref);
   const UAL::Arguments& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PAC */

/* UAL::Shell */
static int G__UALDict_167_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Shell *p=NULL;
   if(G__getaryconstruct()) p=new UAL::Shell[G__getaryconstruct()];
   else p=::new((G__UALDictdOcc_tag*)G__getgvp()) UAL::Shell;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLShell);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_167_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((UAL::Shell*)(G__getstructoffset()))->setMapAttributes(*(UAL::Arguments*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_167_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((UAL::Shell*)(G__getstructoffset()))->setBeamAttributes(*(UAL::Arguments*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_167_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const PAC::BeamAttributes& obj=((UAL::Shell*)(G__getstructoffset()))->getBeamAttributes();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_167_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((UAL::Shell*)(G__getstructoffset()))->setBunch(*(UAL::Arguments*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_167_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((UAL::Shell*)(G__getstructoffset()))->readSXF(*(UAL::Arguments*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_167_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((UAL::Shell*)(G__getstructoffset()))->use(*(UAL::Arguments*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_167_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((UAL::Shell*)(G__getstructoffset()))->analysis(*(UAL::Arguments*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_167_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((UAL::Shell*)(G__getstructoffset()))->readAPDF(*(UAL::Arguments*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_167_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((UAL::Shell*)(G__getstructoffset()))->run(*(UAL::Arguments*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__UALDict_167_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((UAL::Shell*)(G__getstructoffset()))->getAcceleratorPropagator());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__UALDict_167_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   UAL::Shell *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new UAL::Shell(*(UAL::Shell*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__UALDictLN_UALcLcLShell);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef UAL::Shell G__TUALcLcLShell;
static int G__UALDict_167_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (UAL::Shell *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((UAL::Shell *)((G__getstructoffset())+sizeof(UAL::Shell)*i))->~G__TUALcLcLShell();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((UAL::Shell *)(G__getstructoffset()))->~G__TUALcLcLShell();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__UALDict_167_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   UAL::Shell *dest = (UAL::Shell*)(G__getstructoffset());
   *dest = (*(UAL::Shell*)libp->para[0].ref);
   const UAL::Shell& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* UAL */

/* UAL::Argument */

/* UAL::Arguments */

/* PAC */

/* UAL::Shell */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncUALDict {
 public:
  G__Sizep2memfuncUALDict() {p=&G__Sizep2memfuncUALDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncUALDict::*p)();
};

size_t G__get_sizep2memfuncUALDict()
{
  G__Sizep2memfuncUALDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceUALDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableUALDict() {

   /* Setting up typedef entry */
   G__search_typename2("Arg",117,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument),0,G__get_linked_tagnum(&G__UALDictLN_UAL));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,Argument*>",117,G__get_linked_tagnum(&G__UALDictLN_maplEstringcOUALcLcLArgumentmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUALcLcLArgumentmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: UALDict.cc,v 1.1 2004/06/18 22:23:41 ual Exp $",0);
   G__search_typename2("map<string,UAL::Argument*>",117,G__get_linked_tagnum(&G__UALDictLN_maplEstringcOUALcLcLArgumentmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUALcLcLArgumentmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: UALDict.cc,v 1.1 2004/06/18 22:23:41 ual Exp $",0);
   G__search_typename2("map<string,UAL::Argument*>less<string>>",117,G__get_linked_tagnum(&G__UALDictLN_maplEstringcOUALcLcLArgumentmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUALcLcLArgumentmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: UALDict.cc,v 1.1 2004/06/18 22:23:41 ual Exp $",0);
   G__search_typename2("Args",117,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments),0,G__get_linked_tagnum(&G__UALDictLN_UAL));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__UALDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: UALDict.cc,v 1.1 2004/06/18 22:23:41 ual Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__UALDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UALDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: UALDict.cc,v 1.1 2004/06/18 22:23:41 ual Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__UALDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__UALDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: UALDict.cc,v 1.1 2004/06/18 22:23:41 ual Exp $",0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__UALDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: UALDict.cc,v 1.1 2004/06/18 22:23:41 ual Exp $",0);
   G__search_typename2("RCIPtr<AcceleratorNode>",117,G__get_linked_tagnum(&G__UALDictLN_UALcLcLRCIPtrlEUALcLcLAcceleratorNodegR),0,G__get_linked_tagnum(&G__UALDictLN_UAL));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: UALDict.cc,v 1.1 2004/06/18 22:23:41 ual Exp $",0);
   G__search_typename2("AcceleratorNodePtr",117,G__get_linked_tagnum(&G__UALDictLN_UALcLcLRCIPtrlEUALcLcLAcceleratorNodegR),0,G__get_linked_tagnum(&G__UALDictLN_UAL));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<UAL::PropagatorNodePtr>",117,G__get_linked_tagnum(&G__UALDictLN_listlEUALcLcLPropagatorNodePtrcOallocatorlEUALcLcLPropagatorNodePtrgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: UALDict.cc,v 1.1 2004/06/18 22:23:41 ual Exp $",0);
   G__search_typename2("PropagatorIterator",117,G__get_linked_tagnum(&G__UALDictLN_listlEUALcLcLPropagatorNodePtrcOallocatorlEUALcLcLPropagatorNodePtrgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G__UALDictLN_UAL));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* UAL */
static void G__setup_memvarUAL(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UALDictLN_UAL));
   {
   G__memvar_setup((void*)(&UAL::pi),100,0,1,-1,-1,-2,1,"pi=",0,(char*)NULL);
   G__memvar_setup((void*)(&UAL::pmass),100,0,1,-1,-1,-2,1,"pmass=",0,(char*)NULL);
   G__memvar_setup((void*)(&UAL::emass),100,0,1,-1,-1,-2,1,"emass=",0,(char*)NULL);
   G__memvar_setup((void*)(&UAL::pG),100,0,1,-1,-1,-2,1,"pG=",0,(char*)NULL);
   G__memvar_setup((void*)(&UAL::infinity),100,0,1,-1,-1,-2,1,"infinity=",0,(char*)NULL);
   G__memvar_setup((void*)(&UAL::clight),100,0,1,-1,-1,-2,1,"clight=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* UAL::Argument */
static void G__setup_memvarUALcLcLArgument(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument));
   { UAL::Argument *p; p=(UAL::Argument*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgumentcLcLType),-1,-2,1,"EMPTY=-1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgumentcLcLType),-1,-2,1,"NUMBER=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgumentcLcLType),-1,-2,1,"STRING=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgumentcLcLType),-1,-2,1,"OBJECT=2",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgumentcLcLType),-1,-1,4,"m_type=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__UALDictLN_string),-1,-1,4,"m_key=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"m_n=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__UALDictLN_string),-1,-1,4,"m_s=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,1,0,G__get_linked_tagnum(&G__UALDictLN_UALcLcLObject),-1,-1,4,"m_o=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__UALDictLN_UALcLcLObject),-1,-2,4,"s_emptyObject=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* UAL::Arguments */
static void G__setup_memvarUALcLcLArguments(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments));
   { UAL::Arguments *p; p=(UAL::Arguments*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__UALDictLN_maplEstringcOUALcLcLArgumentmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUALcLcLArgumentmUgRsPgRsPgR),-1,-1,4,"m_arguments=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PAC */
static void G__setup_memvarPAC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UALDictLN_PAC));
   {
   }
   G__tag_memvar_reset();
}


   /* UAL::Shell */
static void G__setup_memvarUALcLcLShell(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__UALDictLN_UALcLcLShell));
   { UAL::Shell *p; p=(UAL::Shell*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__UALDictLN_string),-1,-1,4,"m_accName=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__UALDictLN_PACcLcLBeamAttributes),-1,-1,4,"m_ba=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__UALDictLN_UALcLcLAcceleratorPropagator),-1,-1,4,"m_ap=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarUALDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncUAL(void) {
   /* UAL */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UALDictLN_UAL));
   // automatic destructor
   G__memfunc_setup("~UAL",352,(G__InterfaceMethod)NULL,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUALcLcLArgument(void) {
   /* UAL::Argument */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument));
   G__memfunc_setup("Argument",835,G__UALDict_126_1_0,105,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Argument",835,G__UALDict_126_2_0,105,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument),-1,0,1,1,1,0,"u 'UAL::Argument' - 11 - arg",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Argument",835,G__UALDict_126_3_0,105,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument),-1,0,2,1,1,0,
"u 'string' - 11 - key i - - 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Argument",835,G__UALDict_126_4_0,105,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument),-1,0,2,1,1,0,
"u 'string' - 11 - key d - - 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Argument",835,G__UALDict_126_5_0,105,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument),-1,0,2,1,1,0,
"u 'string' - 11 - key u 'string' - 11 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Argument",835,G__UALDict_126_6_0,105,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument),-1,0,2,1,1,0,
"u 'string' - 11 - key u 'UAL::Object' - 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getType",738,G__UALDict_126_7_0,105,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgumentcLcLType),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getKey",617,G__UALDict_126_8_0,117,G__get_linked_tagnum(&G__UALDictLN_string),-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getNumber",937,G__UALDict_126_9_0,100,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getString",951,G__UALDict_126_0_1,117,G__get_linked_tagnum(&G__UALDictLN_string),-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getObject",919,G__UALDict_126_1_1,117,G__get_linked_tagnum(&G__UALDictLN_UALcLcLObject),-1,1,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Argument",961,G__UALDict_126_2_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUALcLcLArguments(void) {
   /* UAL::Arguments */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments));
   G__memfunc_setup("Arguments",950,G__UALDict_135_1_0,105,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Arguments",950,G__UALDict_135_2_0,105,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments),-1,0,1,1,1,0,"u 'UAL::Argument' - 11 - arg",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__UALDict_135_3_0,117,G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments),-1,1,1,1,1,0,"u 'UAL::Argument' - 11 - arg",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getMap",606,G__UALDict_135_4_0,117,G__get_linked_tagnum(&G__UALDictLN_maplEstringcOUALcLcLArgumentmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUALcLcLArgumentmUgRsPgRsPgR),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Arguments",950,G__UALDict_135_5_0,(int)('i'),G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments),-1,0,1,1,1,0,"u 'UAL::Arguments' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Arguments",1076,G__UALDict_135_6_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__UALDict_135_7_0,(int)('u'),G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments),-1,1,1,1,1,0,"u 'UAL::Arguments' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPAC(void) {
   /* PAC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UALDictLN_PAC));
   // automatic destructor
   G__memfunc_setup("~PAC",338,(G__InterfaceMethod)NULL,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUALcLcLShell(void) {
   /* UAL::Shell */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__UALDictLN_UALcLcLShell));
   G__memfunc_setup("Shell",504,G__UALDict_167_1_0,105,G__get_linked_tagnum(&G__UALDictLN_UALcLcLShell),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setMapAttributes",1681,G__UALDict_167_2_0,103,-1,-1,0,1,1,1,0,"u 'UAL::Arguments' - 11 - args",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setBeamAttributes",1768,G__UALDict_167_3_0,103,-1,-1,0,1,1,1,0,"u 'UAL::Arguments' - 11 - args",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getBeamAttributes",1756,G__UALDict_167_4_0,117,G__get_linked_tagnum(&G__UALDictLN_PACcLcLBeamAttributes),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setBunch",828,G__UALDict_167_5_0,103,-1,-1,0,1,1,1,0,"u 'UAL::Arguments' - 11 - args",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("readSXF",653,G__UALDict_167_6_0,103,-1,-1,0,1,1,1,0,"u 'UAL::Arguments' - 11 - args",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("use",333,G__UALDict_167_7_0,103,-1,-1,0,1,1,1,0,"u 'UAL::Arguments' - 11 - args",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("analysis",868,G__UALDict_167_8_0,103,-1,-1,0,1,1,1,0,"u 'UAL::Arguments' - 11 - args",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("readAPDF",695,G__UALDict_167_9_0,103,-1,-1,0,1,1,1,0,"u 'UAL::Arguments' - 11 - args",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("run",341,G__UALDict_167_0_1,103,-1,-1,0,1,1,1,0,"u 'UAL::Arguments' - 11 - args",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getAcceleratorPropagator",2500,G__UALDict_167_1_1,85,G__get_linked_tagnum(&G__UALDictLN_UALcLcLAcceleratorPropagator),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Shell",504,G__UALDict_167_2_1,(int)('i'),G__get_linked_tagnum(&G__UALDictLN_UALcLcLShell),-1,0,1,1,1,0,"u 'UAL::Shell' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Shell",630,G__UALDict_167_3_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__UALDict_167_4_1,(int)('u'),G__get_linked_tagnum(&G__UALDictLN_UALcLcLShell),-1,1,1,1,1,0,"u 'UAL::Shell' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncUALDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalUALDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcUALDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__UALDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__UALDictLN_UAL = { "UAL" , 110 , -1 };
G__linked_taginfo G__UALDictLN_UALcLcLObject = { "UAL::Object" , 99 , -1 };
G__linked_taginfo G__UALDictLN_UALcLcLArgument = { "UAL::Argument" , 99 , -1 };
G__linked_taginfo G__UALDictLN_UALcLcLArgumentcLcLType = { "UAL::Argument::Type" , 101 , -1 };
G__linked_taginfo G__UALDictLN_UALcLcLArguments = { "UAL::Arguments" , 99 , -1 };
G__linked_taginfo G__UALDictLN_maplEstringcOUALcLcLArgumentmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUALcLcLArgumentmUgRsPgRsPgR = { "map<string,UAL::Argument*,less<string>,allocator<pair<const string,UAL::Argument*> > >" , 99 , -1 };
G__linked_taginfo G__UALDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__UALDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__UALDictLN_UALcLcLRCIPtrlEUALcLcLAcceleratorNodegR = { "UAL::RCIPtr<UAL::AcceleratorNode>" , 99 , -1 };
G__linked_taginfo G__UALDictLN_listlEUALcLcLPropagatorNodePtrcOallocatorlEUALcLcLPropagatorNodePtrgRsPgR = { "list<UAL::PropagatorNodePtr,allocator<UAL::PropagatorNodePtr> >" , 99 , -1 };
G__linked_taginfo G__UALDictLN_listlEUALcLcLPropagatorNodePtrcOallocatorlEUALcLcLPropagatorNodePtrgRsPgRcLcLiterator = { "list<UAL::PropagatorNodePtr,allocator<UAL::PropagatorNodePtr> >::iterator" , 99 , -1 };
G__linked_taginfo G__UALDictLN_UALcLcLAcceleratorPropagator = { "UAL::AcceleratorPropagator" , 99 , -1 };
G__linked_taginfo G__UALDictLN_PAC = { "PAC" , 110 , -1 };
G__linked_taginfo G__UALDictLN_PACcLcLBeamAttributes = { "PAC::BeamAttributes" , 99 , -1 };
G__linked_taginfo G__UALDictLN_UALcLcLShell = { "UAL::Shell" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableUALDict() {
  G__UALDictLN_string.tagnum = -1 ;
  G__UALDictLN_UAL.tagnum = -1 ;
  G__UALDictLN_UALcLcLObject.tagnum = -1 ;
  G__UALDictLN_UALcLcLArgument.tagnum = -1 ;
  G__UALDictLN_UALcLcLArgumentcLcLType.tagnum = -1 ;
  G__UALDictLN_UALcLcLArguments.tagnum = -1 ;
  G__UALDictLN_maplEstringcOUALcLcLArgumentmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUALcLcLArgumentmUgRsPgRsPgR.tagnum = -1 ;
  G__UALDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__UALDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__UALDictLN_UALcLcLRCIPtrlEUALcLcLAcceleratorNodegR.tagnum = -1 ;
  G__UALDictLN_listlEUALcLcLPropagatorNodePtrcOallocatorlEUALcLcLPropagatorNodePtrgRsPgR.tagnum = -1 ;
  G__UALDictLN_listlEUALcLcLPropagatorNodePtrcOallocatorlEUALcLcLPropagatorNodePtrgRsPgRcLcLiterator.tagnum = -1 ;
  G__UALDictLN_UALcLcLAcceleratorPropagator.tagnum = -1 ;
  G__UALDictLN_PAC.tagnum = -1 ;
  G__UALDictLN_PACcLcLBeamAttributes.tagnum = -1 ;
  G__UALDictLN_UALcLcLShell.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableUALDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__UALDictLN_string);
   G__tagtable_setup(G__get_linked_tagnum(&G__UALDictLN_UAL),0,-1,0,(char*)NULL,G__setup_memvarUAL,G__setup_memfuncUAL);
   G__get_linked_tagnum(&G__UALDictLN_UALcLcLObject);
   G__tagtable_setup(G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgument),sizeof(UAL::Argument),-1,230144,(char*)NULL,G__setup_memvarUALcLcLArgument,G__setup_memfuncUALcLcLArgument);
   G__get_linked_tagnum(&G__UALDictLN_UALcLcLArgumentcLcLType);
   G__tagtable_setup(G__get_linked_tagnum(&G__UALDictLN_UALcLcLArguments),sizeof(UAL::Arguments),-1,230656,(char*)NULL,G__setup_memvarUALcLcLArguments,G__setup_memfuncUALcLcLArguments);
   G__get_linked_tagnum(&G__UALDictLN_maplEstringcOUALcLcLArgumentmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUALcLcLArgumentmUgRsPgRsPgR);
   G__get_linked_tagnum(&G__UALDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum(&G__UALDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__UALDictLN_UALcLcLRCIPtrlEUALcLcLAcceleratorNodegR);
   G__get_linked_tagnum(&G__UALDictLN_listlEUALcLcLPropagatorNodePtrcOallocatorlEUALcLcLPropagatorNodePtrgRsPgR);
   G__get_linked_tagnum(&G__UALDictLN_listlEUALcLcLPropagatorNodePtrcOallocatorlEUALcLcLPropagatorNodePtrgRsPgRcLcLiterator);
   G__get_linked_tagnum(&G__UALDictLN_UALcLcLAcceleratorPropagator);
   G__tagtable_setup(G__get_linked_tagnum(&G__UALDictLN_PAC),0,-1,0,(char*)NULL,G__setup_memvarPAC,G__setup_memfuncPAC);
   G__get_linked_tagnum(&G__UALDictLN_PACcLcLBeamAttributes);
   G__tagtable_setup(G__get_linked_tagnum(&G__UALDictLN_UALcLcLShell),sizeof(UAL::Shell),-1,196864,(char*)NULL,G__setup_memvarUALcLcLShell,G__setup_memfuncUALcLcLShell);
}
extern "C" void G__cpp_setupUALDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupUALDict()");
  G__set_cpp_environmentUALDict();
  G__cpp_setup_tagtableUALDict();

  G__cpp_setup_inheritanceUALDict();

  G__cpp_setup_typetableUALDict();

  G__cpp_setup_memvarUALDict();

  G__cpp_setup_memfuncUALDict();
  G__cpp_setup_globalUALDict();
  G__cpp_setup_funcUALDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncUALDict();
  return;
}
class G__cpp_setup_initUALDict {
  public:
    G__cpp_setup_initUALDict() { G__add_setup_func("UALDict",(G__incsetup)(&G__cpp_setupUALDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initUALDict() { G__remove_setup_func("UALDict"); }
};
G__cpp_setup_initUALDict G__cpp_setup_initializerUALDict;

